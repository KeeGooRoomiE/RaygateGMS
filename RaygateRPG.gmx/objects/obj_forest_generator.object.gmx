<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init generator

randomize();

//init objects
barrel=obj_barrel;
tree=obj_tree_flushed;
dummy=obj_dummy;
pillar=obj_tree_pillar;
globalanchor=obj_debug_global_anchor_sign;
localanchor=obj_debug_local_anchor_sign;

//global anchor vars
anchors=irandom_range(1,3)+round(room_width/512);
pointx[0]=0;
pointy[0]=0;
pd=0;

//local anchor vars
lax=0;
lay=0;
local_anchor_range=128;
local_anchor_count=anchors+floor(anchors/2+0.75);
lapx[0]=0;
lapy[0]=0;

//tree vars
radius=irandom_range(64,192)
//seed=random_set_seed(radius);
trees=irandom_range(1,8);//local_anchor_count+irandom_range(4,8);
pillars=trees+irandom_range(8,32);

//array init
for (i=0;i&lt;100; i++)
{
    lapx[i]=0;
    lapy[i]=0;
    pointx[i]=0;
    pointy[i]=0;

}

//set global anchors

for (i=0; i&lt;anchors; i++)
{
    //create global anchors
    for (j=0; j&lt;anchors; j++)
    {
        //check for points are &gt;128 distance between
        if i&gt;0
        {
            if j&gt;0
            {
                pd=point_distance(pointx[i-1],pointy[j-1],pointx[i],pointy[j]);
                if pd &lt;128
                {
                    pointx[i]=irandom_range(128,(room_width-128));
                    pointy[j]=irandom_range(128,(room_height-128));
                }
                else
                {
                    continue;
                }
            }
        }
    
        pointx[i]=irandom_range(128,(room_width-128));
        pointy[j]=irandom_range(128,(room_height-128));
        instance_create(pointx[i],pointy[j],obj_debug_global_anchor_sign);
        
        //create local anchors
        for (k=0; k&lt;local_anchor_count; k++)
        {
            lax=pointx[i]+irandom_range(-local_anchor_range,local_anchor_range);
            lay=pointy[j]+irandom_range(-local_anchor_range,local_anchor_range);
            instance_create(lax,lay,obj_debug_local_anchor_sign);
            lapx[k+1*j*i]=lax;
            lapy[k+1*j*i]=lay;
                    
            for (t=0; t&lt;trees; t++)
            {
                var xx=lax+irandom_range(-radius,radius);
                var yy=lay+irandom_range(-radius,radius);
                
                if irandom(100)&gt;66
                {
                    instance_create(xx,yy,tree);
                }
                else
                {
                    instance_create(xx,yy,pillar);
                }
                instance_create(lax,lay,tree);
                instance_create(xx,yy,obj_debug_tree_sign);
            }
        }
    }
}

//sets fauna over the local anchors


/*for (i=0; i&lt;local_anchor_count*anchors; i++)
{
    if i!=0
    {
        //set trees

        
        
    }
}
/*for (i=0; i&lt;anchors; i++)
{
    for (t=0; t&lt;trees; t++)
    {
        instance_create(pointx[i]+irandom_range(-radius,radius),pointy[i]+irandom_range(-radius,radius),tree);
    }
    for (p=0; p&lt;trees; p++)
    {
        instance_create(pointx[i]+irandom_range(-radius,radius),pointy[i]+irandom_range(-radius,radius),pillar);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
